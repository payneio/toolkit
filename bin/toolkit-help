#!/usr/bin/env bash
# Help utility for the scripts framework

if [ -z "$DTOOLKIT_REPO" ]; then
  echo "Error: DTOOLKIT_REPO environment variable is not set."
  exit 1
fi

BIN_DIR="$DTOOLKIT_REPO/bin"
TOOLS_DIR="$DTOOLKIT_REPO/tools"

# Debug info if --debug flag is used
if [[ "$1" == "--debug" ]]; then
  echo "Repository directory: $DTOOLKIT_REPO"
  echo "Bin directory: $BIN_DIR"
  echo "Tools directory: $TOOLS_DIR"
  exit 0
fi

if [[ "$1" == "--version" ]]; then
  echo "scripts-help 1.0.0"
  exit 0
fi

echo "Scripts Framework Help"
echo "======================"
echo ""
echo "Available Commands:"
echo ""

# Find all executable files in the bin directory, excluding this script
if [[ -d "$BIN_DIR" ]]; then
  find "$BIN_DIR" -type f -executable | sort | while read -r file; do
      cmd=$(basename "$file")
      if [[ "$cmd" != "scripts-help" ]]; then
          # Try to extract description from Python file
          for tool_dir in "$TOOLS_DIR"/*; do
            if [[ -d "$tool_dir" ]]; then
              tool_name=$(basename "$tool_dir")
              tool_py="$tool_dir/${tool_name}.py"
              if [[ -f "$tool_py" ]]; then
                  desc=$(grep -A 1 '"""' "$tool_py" | head -2 | tail -1 | sed 's/^[^:]*: //')
                  if [[ "$tool_name" == "$cmd" ]]; then
                    printf "  %-15s %s\n" "$cmd" "$desc"
                    break
                  fi
              fi
            fi
          done
      fi
  done
else
  echo "  No commands found (repository structure issue)"
  echo "  Run with --debug to see path resolution details"
fi

echo ""
echo "Usage:"
echo "  <command> [options] [arguments]"
echo "  <command> --help     Display help for a specific command"
echo "  <command> --man      Display manual page for a specific command"
echo ""
echo "Example:"
echo "  my-echo \"Hello, world\""
echo "  my-echo -u \"Hello, world\""
echo "  my-echo --help"
echo ""
echo "For more information, check the README.md file in $DTOOLKIT_REPO"